#!/usr/bin/env bash
# shellcheck disable=SC2155
set -euo pipefail

export AWS_ACCESS_KEY_ID=restic
export AWS_SECRET_ACCESS_KEY=$(security find-generic-password -w -a "${USER}" -s restic-minio-access-key)
export RESTIC_REPOSITORY=s3:https://minio.home.lan/restic
export RESTIC_PASSWORD=$(security find-generic-password -w -a "${USER}" -s restic-password)
export PAGERDUTY_INTEGRATION_KEY=$(security find-generic-password -w -a "${USER}" -s restic-pagerduty-key)

trap 'catch $?' EXIT
catch() {
  if [ "$1" != "0" ]; then
    terminal-notifier -title 'Restic Backup' -message 'Backup failed.'
    curl --silent --show-error --fail --output /dev/null -X POST \
      --header 'Content-Type: application/json' \
      --header 'Accept: application/vnd.pagerduty+json;version=2' \
      -d "{
      \"event_action\": \"trigger\",
      \"routing_key\": \"$PAGERDUTY_INTEGRATION_KEY\",
      \"payload\": {
        \"summary\": \"backup failed on $(hostname -s)\",
        \"timestamp\": \"$(date --iso-8601=seconds)\",
        \"source\": \"$(hostname)\",
        \"severity\": \"error\"
      }
    }" https://events.pagerduty.com/v2/enqueue
  fi
}


# Check if connected to local wifi, retry five times
# shellcheck disable=SC2034
for i in {1..5}; do
  if route -n get default 2> /dev/null | grep -q "gateway: 192.168.178.1"; then
    printf '\n--- [%s] backup\n' "$(date --iso-8601=seconds)" | tee >(cat >&2) > /dev/null
    restic backup \
      --one-file-system \
      --exclude-file="${HOME}/.config/restic/exclude.txt" \
      "${HOME}"

    printf '\n--- [%s] prune snapshots\n' "$(date --iso-8601=seconds)" | tee >(cat >&2) > /dev/null
    restic forget \
      --keep-daily=7 \
      --keep-weekly=4 \
      --keep-monthly=6 \
      --prune
    break
  else
    sleep 2
  fi
done


unset AWS_ACCESS_KEY_ID
unset AWS_SECRET_ACCESS_KEY
unset RESTIC_REPOSITORY
unset RESTIC_PASSWORD
unset PAGERDUTY_INTEGRATION_KEY
